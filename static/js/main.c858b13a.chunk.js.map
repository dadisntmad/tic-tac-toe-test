{"version":3,"sources":["components/GridItem/GridItem.jsx","components/Grid/Grid.jsx","components/Modal/Modal.jsx","components/Main/Main.jsx","helpers/calculateWinner.js","App.js","index.js"],"names":["GridItem","value","onClick","highlight","className","cn","Grid","squares","winnerLine","map","square","index","includes","Modal","playerOne","setPlayerOne","playerTwo","setPlayerTwo","setShowModal","type","placeholder","onChange","e","target","maxLength","Main","React","useState","showModal","xWinnerPoint","setXWinnerPoint","oWinnerPoint","setOWinnerPoint","Array","fill","board","setBoard","xTurn","setXTurn","winnerInfo","lines","i","length","a","b","c","winner","line","calculateWinner","boardCopy","restart","useEffect","timeout","setTimeout","prev","clearTimeout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c858b13a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport cn from 'classnames';\r\n\r\nimport './gridItem.css';\r\n\r\nexport const GridItem = ({ value, onClick, highlight }) => {\r\n  return (\r\n    <button\r\n      className={cn('start__btn', {\r\n        highlight,\r\n      })}\r\n      onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { GridItem } from '../GridItem/GridItem';\r\n\r\nimport './grid.css';\r\n\r\nexport const Grid = ({ squares, onClick, winnerLine }) => {\r\n  return (\r\n    <div className=\"grid\">\r\n      {squares.map((square, index) => (\r\n        <GridItem\r\n          key={index}\r\n          value={square}\r\n          onClick={() => onClick(index)}\r\n          highlight={winnerLine && winnerLine.includes(index)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './modal.css';\r\n\r\nexport const Modal = ({ playerOne, setPlayerOne, playerTwo, setPlayerTwo, setShowModal }) => {\r\n  const setPlayers = () => {\r\n    if (!playerOne && !playerTwo) {\r\n      return;\r\n    }\r\n    setPlayerOne(playerOne);\r\n    setPlayerTwo(playerTwo);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__container\">\r\n        <div className=\"form\">\r\n          <div className=\"player\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Введите имя игрока №1\"\r\n              value={playerOne}\r\n              onChange={(e) => setPlayerOne(e.target.value)}\r\n              maxLength={10}\r\n            />\r\n          </div>\r\n          <div className=\"player\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Введите имя игрока №2\"\r\n              value={playerTwo}\r\n              onChange={(e) => setPlayerTwo(e.target.value)}\r\n              maxLength={10}\r\n            />\r\n          </div>\r\n          <button onClick={setPlayers} className=\"start\">\r\n            Играть\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { calculateWinner } from '../../helpers/calculateWinner';\r\n\r\nimport { Grid } from '../Grid/Grid';\r\nimport { Modal } from '../Modal/Modal';\r\n\r\nexport const Main = () => {\r\n  const [showModal, setShowModal] = React.useState(true);\r\n  const [playerOne, setPlayerOne] = React.useState('');\r\n  const [playerTwo, setPlayerTwo] = React.useState('');\r\n  const [xWinnerPoint, setXWinnerPoint] = React.useState(0);\r\n  const [oWinnerPoint, setOWinnerPoint] = React.useState(0);\r\n  const [board, setBoard] = React.useState(Array(9).fill(null));\r\n  const [xTurn, setXTurn] = React.useState(true);\r\n\r\n  const winnerInfo = calculateWinner(board);\r\n  const winner = winnerInfo.winner;\r\n\r\n  const boardCopy = [...board];\r\n\r\n  const handleClick = (index) => {\r\n    if (winner || boardCopy[index]) return;\r\n    boardCopy[index] = xTurn ? 'X' : 'O';\r\n    setBoard(boardCopy);\r\n    setXTurn(!xTurn);\r\n  };\r\n\r\n  const restart = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setXTurn(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    let timeout;\r\n    if (winner && winner === 'X') {\r\n      timeout = setTimeout(() => {\r\n        restart();\r\n      }, 1000);\r\n      setXWinnerPoint((prev) => prev + 1);\r\n    }\r\n\r\n    if (winner && winner === 'O') {\r\n      timeout = setTimeout(() => {\r\n        restart();\r\n        setOWinnerPoint((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    if (winner && winner === 'Ничья!') {\r\n      timeout = setTimeout(() => {\r\n        restart();\r\n        setXWinnerPoint(xWinnerPoint);\r\n        setOWinnerPoint(oWinnerPoint);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [winner]);\r\n\r\n  return (\r\n    <div>\r\n      {showModal && (\r\n        <Modal\r\n          playerOne={playerOne}\r\n          setPlayerOne={setPlayerOne}\r\n          playerTwo={playerTwo}\r\n          setPlayerTwo={setPlayerTwo}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n      <div className=\"tictactoe\">\r\n        <Grid squares={board} onClick={handleClick} winnerLine={winnerInfo.line} />\r\n        <div className=\"score\">\r\n          <h3>Score</h3>\r\n          {playerOne && (\r\n            <p>\r\n              {playerOne}: {xWinnerPoint}\r\n            </p>\r\n          )}\r\n          {playerTwo && (\r\n            <p>\r\n              {playerTwo}: {oWinnerPoint}\r\n            </p>\r\n          )}\r\n          <p>{winner === 'Ничья!' ? 'Ничья!' : ''}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        winner: squares[a],\r\n        line: lines[i],\r\n      };\r\n    } else if (!squares.includes(null)) {\r\n      return {\r\n        winner: 'Ничья!',\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    winner: null,\r\n  };\r\n}\r\n","import React from 'react';\nimport { Main } from './components/Main/Main';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}